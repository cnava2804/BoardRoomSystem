@model BoardRoomSystem.Models.Event
@{
    ViewData["Title"] = "Home Page";
}

@{
    @using System.Security.Claims;
   var claimsIdentity = User.Identity as ClaimsIdentity;
   if (claimsIdentity != null)
   {
   // the principal identity is a claims identity.
  // now we need to find the NameIdentifier claim
       var userIdClaim = claimsIdentity.Claims.FirstOrDefault(x => x.Type == ClaimTypes.NameIdentifier);

       if (userIdClaim != null) {
            var userIdValue = userIdClaim.Value;
    <input type="hidden" id="hdUserID" value="@userIdValue.ToString()" />
       }
   }
}


<h1 class="text-center">Sistema de Reservación de Salas</h1>
<br />

<label>Filtros</label>
<div>

    <div class="col-md-3">
        <select class="form-control filter" id="loc_selector" name="loc_selector">
            <option value='all'>Todas las Ubicaciones</option>
        </select>
    </div>

    <div class="col-md-3">
        <select class="form-control filter" id="room_selector" name="room_selector">
            <option value='all'>Todas las Salas</option>
        </select>
    </div>
</div>


<br />
<br />
<br />
<div id="calender"></div>
<br />

@*-----------Button Floating-------------------------*@

<link href="~/css/btnfloating.css" rel="stylesheet" />

<div class="action" onclick="actionToggle();">
    <span>+</span>
   @* <ul>
        <li><img src="~/img/add-event.png">Crear una reservación</li>
    </ul>*@
</div>

@*<img class="wave" src="/img/waveIndexCal.svg">*@
@*------------Modal Details---------------------*@
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"><span id="eventTitle"></span></h4>
            </div>
            <div class="modal-body">
                <button id="btnDelete" class="btn btn-default btn-sm pull-right">
                    <span class="glyphicon glyphicon-remove"></span> Eliminar
                </button>
                <button id="btnEdit" class="btn btn-default btn-sm pull-right" style="margin-right:5px;">
                    <span class="glyphicon glyphicon-pencil"></span> Editar
                </button>
                <p id="pDetails"></p>
                <p id="pRoom"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@*-----Modal create reservation------------*@
<div id="myModalSave" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Reservación</h4>
            </div>
            <div class="modal-body">
                <form asp-controller="Home" asp-action="Post" method="post" class="col-md-12 form-horizontal">
                    <input type="hidden" id="hdEventID" value="0" />
                    
                    <div class="form-group">
                        <label>Asunto</label>
                        <input type="text" id="txtSubject" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Ubicación</label>
                        <select class="form-control" id="txtLocation">
                            <option>--Seleccionar Ubicación--</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Sala</label>
                        <select class="form-control" id="txtRoom">
                            <option>--Seleccionar Sala--</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Fecha de Inicio</label>
                        <div class="input-group date" id="dtp1">
                            <input type="text" id="txtStart" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <label><input type="checkbox" id="chkIsFullDay" checked="checked" />  Todo el día</label>
                        </div>
                    </div>
                    <div class="form-group" id="divEndDate" style="display:none">
                        <label>Fecha Final</label>
                        <div class="input-group date" id="dtp2">
                            <input type="text" id="txtEnd" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Descripción</label>
                        <textarea id="txtDescription" rows="3" class="form-control"></textarea>
                    </div>
                    <div class="form-group">
                        <label>Número de personas que estarán a la sala</label>
                        <input type="number" id="intNumOfPeople" rows="3" class="form-control"/>
                    </div>
                    <div class="form-group">
                        <label>Área de quién reserva la sala</label>
                        <select class="form-control" id="txtArea">
                            <option>--Seleccionar Área--</option>
                        </select>
                    </div>
                   @* <div class="form-group">
                        <label>Color de la etiqueta</label>
                        <select id="ddThemeColor" class="form-control">
                            <option value="">Predeterminado</option>
                            <option value="#DC143C">Rojo</option>
                            <option value="#6495ED">Azúl</option>
                            <option value="black">Negro</option>
                            <option value="#8FBC8F">Verde</option>
                            <option value="#808080">Gris</option>
                            <option value="#FFA07A">Salmon</option>
                        </select>
                    </div>*@
                    <button type="button" id="btnSave" class="btn btn-success">Guardar</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </form>
            </div>
        </div>
    </div>
</div>

@*---------------------Modal Edit--------------------------------*@


<div id="myModalEdit" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Editar Reservación</h4>
            </div>
            <div class="modal-body">
                <form method="post" class="col-md-12 form-horizontal">
                    <input type="hidden" id="hdEventIDEd" value="0" />
                    
                    <div class="form-group">
                        <label>Asunto</label>
                        <input type="text" id="txtSubjectEd" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Ubicación</label>
                        <select class="form-control" id="txtLocationEd">
                            <option>--Seleccionar Ubicación--</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Sala</label>
                        <select class="form-control" id="txtRoomEd">
                            <option>--Seleccionar Sala--</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Fecha de Inicio</label>
                        <div class="input-group date" id="dtp1Ed">
                            <input type="text" id="txtStartEd" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <label><input type="checkbox" id="chkIsFullDayEd" checked="checked" />  Todo el día</label>
                        </div>
                    </div>
                    <div class="form-group" id="divEndDateEd" style="display:none">
                        <label>Fecha Final</label>
                        <div class="input-group date" id="dtp2Ed">
                            <input type="text" id="txtEndEd" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Descripción</label>
                        <textarea id="txtDescriptionEd" rows="3" class="form-control"></textarea>
                    </div>
                    <div class="form-group">
                        <label>Número de personas que estarán a la sala</label>
                        <input type="number" id="intNumOfPeopleEd" rows="3" class="form-control"/>
                    </div>
                    <div class="form-group">
                        <label>Área de quién reserva la sala</label>
                        <select class="form-control" id="txtAreaEd">
                            <option>--Seleccionar Área--</option>
                        </select>
                    </div>
                   @* <div class="form-group">
                        <label>Color de la etiqueta</label>
                        <select id="ddThemeColorEd" class="form-control">
                            <option value="">Predeterminado</option>
                            <option value="#DC143C">Rojo</option>
                            <option value="#6495ED">Azúl</option>
                            <option value="black">Negro</option>
                            <option value="#8FBC8F">Verde</option>
                            <option value="#808080">Gris</option>
                            <option value="#FFA07A">Salmon</option>
                        </select>
                    </div>*@
                    <button type="button" id="btnSaveEd" class="btn btn-success">Guardar</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </form>
            </div>
        </div>
    </div>
</div>

@if (ViewBag.Message == true)
{
    <div onshow="alertValidation();"></div>
}

<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.css" rel="stylesheet" />
<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.print.css" rel="stylesheet" media="print" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
@section Scripts{
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.js"></script>
    <script src="~/js/locale-all.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>
    
    <script src="~/js/eventhub.js"></script>
    <script>

        var connection = new signalR.HubConnectionBuilder().withUrl("/eventHub").build();

        $(document).ready(function () {
            var events = [];
            var selectedEvent = null;
            var initialLocaleCode = 'es';
            FetchEventAndRenderCalendar();
            function FetchEventAndRenderCalendar() {
                events = [];
                $.ajax({
                    type: "GET",
                    url: "/Home/GetEvents",
                    success: function (data) {
                        $.each(data, function (i, v) {
                            events.push({
                                eventID: v.EventID,
                                title: v.Subject,
                                locationId: v.IdLocation,
                                locationName: v.NameLocation,
                                RoomId: v.IdMeetR,
                                RoomName: v.NameMeetR,
                                description: v.Description,
                                start: moment(v.Start),
                                end: v.End != null ? moment(v.End) : null,
                                color: v.ThemeColorMeetR,
                                allDay: v.IsFullDay,
                                numOfPeople: v.NumOfPeople,
                                userID: v.Id,
                                areaID: v.IdArea,
                                AreaName: v.NameArea
                            });
                        })

                        GenerateCalender(events);
                    },
                    error: function (error) {
                        alert('Error');
                    }
                });
            };

            function GenerateCalender(events) {
                $('#calender').fullCalendar('destroy');
                $('#calender').fullCalendar({
                    contentHeight: 400,
                    defaultDate: new Date(),
                    timeFormat: 'h(:mm)a',
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,agendaWeek,agendaDay'
                    },
                    locale: initialLocaleCode,
                    eventLimit: true,
                    eventColor: '#378006',
                    events: events,
                    eventClick: function (calEvent, jsEvent, view) {
                        selectedEvent = calEvent;
                        $('#myModal #eventTitle').text(calEvent.title);
                        var $description = $('<div/>');
                        $description.append($('<p/>').html('<b>Fecha de Inicio: </b>' + calEvent.start.format("DD-MMM-YYYY HH:mm a")));
                        if (calEvent.end != null) {
                            $description.append($('<p/>').html('<b>Fecha Final: </b>' + calEvent.end.format("DD-MMM-YYYY HH:mm a")));
                        }
                        $description.append($('<p/>').html('<b>Descripción: </b>' + calEvent.description));
                        $('#myModal #pDetails').empty().html($description);

                        $description.append($('<p/>').html('<b>Ubicación: </b>' + calEvent.locationName));
                        $('#myModal #pDetails').empty().html($description);

                        $description.append($('<p/>').html('<b>Sala: </b>' + calEvent.RoomName));
                        $('#myModal #pDetails').empty().html($description);

                        $description.append($('<p/>').html('<b>Área: </b>' + calEvent.AreaName));
                        $('#myModal #pDetails').empty().html($description);

                        $('#myModal').modal();
                    },


                    eventRender: function eventRender(objEvent, element, view) {
                        if (view.name === "listDay") { //or agendaWeek
                            element.find(".fc-list-item-title")
                                .append(
                                    "<br/><b> Descripción: </b>" + objEvent.description +
                                    "<br/><b> Ubicación de la Reunión: </b>" + objEvent.locationName +
                                    "<br/><b> Sala: </b>" + objEvent.RoomName +
                                    "<br/> <b> Área quien reserva la sala: </b>" + objEvent.AreaName
                                );
                        }
                        if (view.name === "agendaDay") { //or agendaWeek
                            element.find(".fc-content")
                                .append(
                                    "<br/><b> Descripción: </b>" + objEvent.description +
                                    "<br/><b> Ubicación de la Reunión: </b>" + objEvent.locationName +
                                    "<br/><b> Sala: </b>" + objEvent.RoomName +
                                    "<br/> <b> Área quien reserva la sala: </b>" + objEvent.AreaName
                                );
                        }

                        var showTypes, showFacilities, showSearchTerms = true;
                        var types = $('#loc_selector').val();
                        var types2 = $('#room_selector').val();

                        /* filters */

                        if (types && types.length > 0) {
                            if (types.trim().toLowerCase() == "all") {

                                showTypes = true;
                            }
                            else {
                                showTypes = types.indexOf(objEvent.locationId) >= 0;
                            }
                        }
                        if (types2 && types2.length > 0) {
                            if (types2.trim().toLowerCase() == "all") {
                                showTypes = true;
                            }
                            else {

                                showTypes = types2.indexOf(objEvent.RoomId) >= 0;


                            }

                        }

                        return showTypes;

                    }, //end: eventRender

                    selectable: true,
                    select: function (start, end) {
                        selectedEvent = {
                            eventID: 0,
                            title: '',
                            locationId: 0,
                            RoomId: 0,
                            description: '',
                            start: start,
                            end: end,
                            allDay: false,
                            numOfPeople: 0,
                            userID: $('#hdUserID').val(),
                            areaID: 0
                        };
                        openAddForm();
                        $('#calendar').fullCalendar('unselect');
                    },
                    

                    editable: true,
                    eventDrop: function (event) {
                        var data = {
                            EventID: event.eventID,
                            Subject: event.title,
                            IdLocation: event.locationId,
                            IdMeetR: event.RoomId,
                            Start: event.start.format('DD/MM/YYYY HH:mm A'),
                            End: event.end != null ? event.end.format('DD/MM/YYYY HH:mm A') : null,
                            Description: event.description,
                            IsFullDay: event.allDay,
                            NumOfPeople: event.numOfPeople,
                            UserId: event.userID,
                            IdArea: event.areaID
                        };
                        SaveEventEd(data);
                    }
                })
            };

            connection.on("ReciveEvent", function(EventId) {
            console.log(EventId);
                 if (EventId = true){
                    FetchEventAndRenderCalendar();
                 }

            })

            $('#btnEdit').click(function () {
                //Open modal dialog for edit event
                openEditForm();
            });

            $('#btnDelete').click(function () {
                Swal.fire({
                title: '¿Estás seguro de querer eliminar esta reservación?',
                text: "Recuerda que no podras revertir esta acción!",
                icon: 'Advertencia',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Si, Eliminar!'
                }).then((result) => {
                if (selectedEvent != null && result.isConfirmed) {
                    $.ajax({
                        type: "POST",
                        url: '/Home/DeleteEvent',
                        data: { 'eventID': selectedEvent.eventID },
                        success: function (data) {
                            if (data.status) {
                                //Refresh the calender
                                FetchEventAndRenderCalendar();
                                $('#myModal').modal('hide');
                                Swal.fire(
                                    'Eliminado!',
                                    'Has eliminado una reservación.',
                                    'Exito'
                                );
                                // Send Message EventHub
                                connection.invoke("DeleteEvent", EventId = true).catch(function (err){
                                return console.error(err.toString());
                            });
                            }
                        },
                        error: function (xhr, httpStatusMessage, customErrorMessage) {
                            if (xhr.status === 505) {
                                Swal.fire({
                                   icon: 'warning',
                                   title: "Lo sentimos, usted no puede eliminar reservaciones de otros usuarios." + customErrorMessage
                                })

                            }
                            else{
                                Swal.fire({
                                    icon: 'warning',
                                    title: "Error al eliminar." + customErrorMessage
                                })

                            }
                            $('#myModal').modal('hide');

                        }
                    })
                }
                })
            });

            connection.on("ReciveDeleteEvent", function(EventId) {
                console.log(EventId);
                if (EventId = true) {
                    FetchEventAndRenderCalendar();
                }

            });

            $('#dtp1,#dtp2').datetimepicker({
                format: 'DD/MM/YYYY HH:mm A'
            });

            $('#dtp1Ed,#dtp2Ed').datetimepicker({
                format: 'DD/MM/YYYY HH:mm A'
            });

            $('#chkIsFullDay').change(function () {
                if ($(this).is(':checked')) {
                    $('#divEndDate').hide();
                }
                else {
                    $('#divEndDate').show();
                }
            });

            $('#chkIsFullDayEd').change(function () {
                if ($(this).is(':checked')) {
                    $('#divEndDateEd').hide();
                }
                else {
                    $('#divEndDateEd').show();
                }
            });

           

            function openAddForm() {
                if (selectedEvent != null) {
                    $('#hdEventID').val(selectedEvent.eventID);
                    $('#txtSubject').val(selectedEvent.title);
                    $('#txtLocation').val(selectedEvent.locationId);
                    $('#txtRoom').val(selectedEvent.RoomId);
                    $('#txtArea').val(selectedEvent.areaID);
                    $('#txtStart').val(selectedEvent.start.format('DD/MM/YYYY HH:mm A'));
                    $('#chkIsFullDay').prop("checked", selectedEvent.allDay || false);
                    $('#chkIsFullDay').change();
                    $('#txtEnd').val(selectedEvent.end != null ? selectedEvent.end.format('DD/MM/YYYY HH:mm A') : '');
                    $('#txtDescription').val(selectedEvent.description);
                    $('#intNumOfPeople').val(selectedEvent.numOfPeople);
                    $('#hdUserID').val(selectedEvent.userID);
                }
                $('#myModal').modal('hide');
                $('#myModalSave').modal();
            };

            function openEditForm() {
                if (selectedEvent != null) {
                    $('#hdEventIDEd').val(selectedEvent.eventID);
                    $('#txtSubjectEd').val(selectedEvent.title);
                    $('#txtLocationEd').val(selectedEvent.locationId);
                    $('#txtRoomEd').append('<Option value=' + selectedEvent.RoomId + '>' + selectedEvent.RoomName + '</Option>');
                    $('#txtRoomEd').val(selectedEvent.RoomId);
                    $('#txtAreaEd').val(selectedEvent.areaID);
                    $('#txtStartEd').val(selectedEvent.start.format('DD/MM/YYYY HH:mm A'));
                    $('#chkIsFullDayEd').prop("checked", selectedEvent.allDay || false);
                    $('#chkIsFullDayEd').change();
                    $('#txtEndEd').val(selectedEvent.end != null ? selectedEvent.end.format('DD/MM/YYYY HH:mm A') : '');
                    $('#txtDescriptionEd').val(selectedEvent.description);
                    $('#intNumOfPeopleEd').val(selectedEvent.numOfPeople);
                    $('#hdUserID').val(selectedEvent.userID);
                }
                $('#myModal').modal('hide');
                $('#myModalEdit').modal();
            };

            

            $('#btnSave').click(function () {
                //Validation/
                if ($('#txtSubject').val().trim() == "") {
                    Swal.fire({icon: 'question',
                           title: 'Asunto requerido'})
                    return;
                }
                if ($('#txtLocation').val() == null || $('#txtLocation').val() == '--Seleccionar Ubicación--') {
                    Swal.fire({icon: 'question',
                           title: 'Seleccione una Ubicación.'})
                    return;
                }
                if ($('#txtRoom').val() == null || $('#txtRoom').val() == '--Seleccionar Sala--') {
                    Swal.fire({icon: 'question',
                           title: 'Seleccione una Sala.'})
                    return;
                }
                if ($('#txtStart').val().trim() == "") {
                    Swal.fire({icon: 'question',
                           title: 'Fecha inicial requerida.'})
                    return;
                }
                if ($('#chkIsFullDay').is(':checked') == false && $('#txtEnd').val().trim() == "") {
                    Swal.fire({icon: 'question',
                           title: 'Fecha final requerida.'})
                    return;
                }
                if ($('#intNumOfPeople').val() == null || $('#intNumOfPeople').val() == 0) {
                    Swal.fire({icon: 'question',
                           title: 'Número de personas requerido.'})
                    return;
                } 
                if ($('#txtArea').val() == null || $('#txtArea').val() == '--Seleccionar Área--') {
                    Swal.fire({icon: 'question',
                           title: 'Seleccione un Área.'})
                    return;
                }
                

                else {
                    var startDate = moment($('#txtStart').val(), "DD/MM/YYYY HH:mm A").toDate();
                    var endDate = moment($('#txtEnd').val(), "DD/MM/YYYY HH:mm A").toDate();
                    if (startDate > endDate) {
                        Swal.fire({icon: 'error',
                           title: 'La fecha inicial no puede ser mayor que la fecha final.'})
                        return;
                    }
                }

                var data = {
                    EventID: $('#hdEventID').val(),
                    Subject: $('#txtSubject').val().trim(),
                    IdLocation: $('#txtLocation').val().trim(),
                    IdMeetR: $('#txtRoom').val().trim(),
                    IdArea: $('#txtArea').val().trim(),
                    Start: $('#txtStart').val().trim(),
                    End: $('#chkIsFullDay').is(':checked') ? null : $('#txtEnd').val().trim(),
                    Description: $('#txtDescription').val(),
                    IsFullDay: $('#chkIsFullDay').is(':checked'),
                    NumOfPeople: $('#intNumOfPeople').val().trim(),
                    UserId: $('#hdUserID').val()
                }
                SaveEvent(data);

                // call function for submit data to the server

            });

            $('#btnSaveEd').click(function ()
            {
                //Validation/
                if ($('#txtSubjectEd').val().trim() == "") {
                    Swal.fire({icon: 'question',
                           title: 'Asunto requerido'})
                    return;
                }
                if ($('#txtLocationEd').val() == null || $('#txtLocationEd').val() == '--Seleccionar Ubicación--') {
                    Swal.fire({icon: 'question',
                           title: 'Seleccione una Ubicación.'})
                    return;
                }
                if ($('#txtRoomEd').val() == null || $('#txtRoomEd').val() == '--Seleccionar Sala--') {
                    Swal.fire({icon: 'question',
                           title: 'Seleccione una Sala.'})
                    return;
                }
                if ($('#txtStartEd').val().trim() == "") {
                    Swal.fire({icon: 'question',
                           title: 'Fecha inicial requerida.'})
                    return;
                }
                if ($('#chkIsFullDayEd').is(':checked') == false && $('#txtEndEd').val().trim() == "") {
                    Swal.fire({icon: 'question',
                           title: 'Fecha final requerida.'})
                    return;
                }
                if ($('#intNumOfPeopleEd').val() == null || $('#intNumOfPeopleEd').val() == 0) {
                    Swal.fire({icon: 'question',
                           title: 'Número de personas requerido.'})
                    return;
                }
                if ($('#txtAreaEd').val() == null || $('#txtAreaEd').val() == '--Seleccionar Área--') {
                    Swal.fire({icon: 'question',
                           title: 'Seleccione un Área.'})
                    return;
                }
                else {
                    var startDate = moment($('#txtStartEd').val(), "DD/MM/YYYY HH:mm A").toDate();
                    var endDate = moment($('#txtEndEd').val(), "DD/MM/YYYY HH:mm A").toDate();
                    if (startDate > endDate) {
                        Swal.fire({icon: 'error',
                           title: 'La fecha inicial no puede ser mayor que la fecha final.'})
                        return;
                    }
                }

                var data = {
                    EventID: $('#hdEventIDEd').val(),
                    Subject: $('#txtSubjectEd').val().trim(),
                    IdLocation: $('#txtLocationEd').val().trim(),
                    IdMeetR: $('#txtRoomEd').val().trim(),
                    IdArea: $('#txtAreaEd').val().trim(),
                    Start: $('#txtStartEd').val().trim(),
                    End: $('#chkIsFullDayEd').is(':checked') ? null : $('#txtEndEd').val().trim(),
                    Description: $('#txtDescriptionEd').val(),
                    IsFullDay: $('#chkIsFullDayEd').is(':checked'),
                    NumOfPeople: $('#intNumOfPeopleEd').val().trim(),
                    UserId: $('#hdUserID').val()
                }
                SaveEventEd(data);
               
                // call function for submit data to the server
            });



            function SaveEvent(data) {
                $.ajax({
                    type: "POST",
                    url: '/Home/SaveEvent',
                    data: data,
                    success: function (data) {
                        if (data.status) {
                            //Refresh the calender
                            FetchEventAndRenderCalendar();
                            $('#myModalSave').modal('hide');
                            Swal.fire({
                                position: 'center-center',
                                icon: 'success',
                                title: '¡Has creado una nueva reservación!',
                                showConfirmButton: false,
                                timer: 1500
                            })
                           // Send Message EventHub
                            connection.invoke("SendAddeEvent", EventId = true).catch(function (err){
                              return console.error(err.toString());
                            });
                        }
                    },
                    error: function (xhr, httpStatusMessage, customErrorMessage) {
                        if (xhr.status === 501) {
                            Swal.fire({
                                icon: 'warning',
                                title: "Lo sentimos, el número de personas es demasiado alto para la sala." + customErrorMessage
                            })

                        }
                        if (xhr.status === 502) {
                            Swal.fire({
                                icon: 'warning',
                                title: "Lo sentimos, el número de personas es demasiado bajo para la sala." + customErrorMessage
                            })

                        }
                        if (xhr.status === 503) {
                            Swal.fire({
                                icon: 'warning',
                                title: "Lo sentimos, ya existe una reservación en esta sala con esa fecha y hora." + customErrorMessage
                            })

                        }
                    }
                })
            };

            connection.on("ReciveAddEvent", function(EventId) {
            console.log(EventId);
                 if (EventId = true){
                    FetchEventAndRenderCalendar();
                 }

            });


            function SaveEventEd(data) {
                $.ajax({
                    type: "POST",
                    url: '/Home/SaveEventEd',
                    data: data,
                    success: function (data) {
                        if (data.status) {
                            //Refresh the calender
                            FetchEventAndRenderCalendar();


                            Swal.fire({
                                position: 'center-center',
                                icon: 'success',
                                title: '¡Reservación editada correctamente!',
                                showConfirmButton: false,
                                timer: 1500
                            })

                            $('#myModalEdit').modal('hide');
                            // Send Message EventHub
                            connection.invoke("SendUpdateEvent", EventId = true).catch(function (err){
                              return console.error(err.toString());
                            });
                        }
                    },
                    error: function (xhr, httpStatusMessage, customErrorMessage) {
                        if (xhr.status === 501) {
                            Swal.fire({
                                icon: 'warning',
                                title: "Lo sentimos, el número de personas es demasiado alto para la sala." + customErrorMessage
                            })

                        }
                        if (xhr.status === 502) {
                            Swal.fire({
                                icon: 'warning',
                                title: "Lo sentimos, el número de personas es demasiado bajo para la sala." + customErrorMessage
                            })

                        }
                        if (xhr.status === 503) {
                            Swal.fire({
                                icon: 'warning',
                                title: "Lo sentimos, ya existe una reservación en esta sala con esa fecha y hora." + customErrorMessage
                            })

                        }
                        if (xhr.status === 504) {
                            Swal.fire({
                                icon: 'warning',
                                title: "Lo sentimos, usted no puede editar reservaciones de otros usuarios." + customErrorMessage
                            })
                            FetchEventAndRenderCalendar();
                            $('#myModalEdit').modal('hide');

                        }
                    }
                })
            };


            GetLocations();
            $('#loc_selector').change(function () {
                var id = $(this).val();
                $('#room_selector').empty();
                $('#room_selector').append('<option value="all">All Rooms</option>');
                $.ajax({
                    url: '/Home/room_selector?id=' + id,
                    success: function (result) {
                        $.each(result, function (i, data) {
                            $('#room_selector').append('<Option value=' + data.idMeetR + '>' + data.nameMeetR + '</Option>');
                        });
                    }
                });
            });

            $('.filter').on('change', function () {
                $('#calender').fullCalendar('rerenderEvents');
            });

            GetLocationEd();
            GetRoomEd();

            GetAreas();
            GetAreasEd();

        });

        function GetLocations() {
            $.ajax({
                url: '/Home/loc_selector',
                success: function (result) {
                    $.each(result, function (i, data) {
                        $('#loc_selector').append('<Option value=' + data.idLocation + '>' + data.nameLocation + '</Option>');
                    });
                }
            });
        };


        function GetLocationEd() {
             $.ajax({
                 url: '/Home/txtLocationEd',
                 success: function (result) {
                     $.each(result, function (i, data) {
                         $('#txtLocationEd').append('<Option value=' + data.idLocation + '>' + data.nameLocation + '</Option>');
                     });
                 }
             });
        };

        function GetRoomEd() {

            $('txtRoomEd').attr('disable', true);
            $('#txtLocationEd').change(function () {
                $('txtRoomEd').attr('disable', false);
                var id = $(this).val();
                $('#txtRoomEd').empty();
                $('#txtRoomEd').append('<option>--Seleccionar Sala--</option>');
                $.ajax({
                    url: '/Home/txtRoomEd?id=' + id,
                    success: function (result) {
                        $.each(result, function (i, data) {
                            $('#txtRoomEd').append('<Option value=' + data.idMeetR + '>' + data.nameMeetR + '</Option>');
                        });
                    }
                });
            });
        }


        function GetAreas() {
            $.ajax({
                url: '/Home/txtArea',
                success: function (result) {
                    $.each(result, function (i, data) {
                        $('#txtArea').append('<Option value=' + data.idArea + '>' + data.nameArea + '</Option>');
                    });
                }
            });
        };

        function GetAreasEd() {
            $.ajax({
                url: '/Home/txtArea',
                success: function (result) {
                    $.each(result, function (i, data) {
                        $('#txtAreaEd').append('<Option value=' + data.idArea + '>' + data.nameArea + '</Option>');
                    });
                }
            });
        };

        function actionToggle() {
            var action = document.querySelector('.action');
            action.classList.toggle('active');

            
            //openAddForm();
            $('#myModalSave').modal();
            $('#calendar').fullCalendar('unselect');

            if (selectedEvent != null) {
                $('#hdEventID').val(selectedEvent.eventID);
                $('#txtSubject').val(selectedEvent.title);
                $('#txtLocation').val(selectedEvent.locationId);
                $('#txtRoom').val(selectedEvent.RoomId);
                $('#txtArea').val(selectedEvent.areaID);
                $('#txtStart').val(selectedEvent.start.format('DD/MM/YYYY HH:mm A'));
                $('#chkIsFullDay').prop("checked", selectedEvent.allDay || false);
                $('#chkIsFullDay').change();
                $('#txtEnd').val(selectedEvent.end != null ? selectedEvent.end.format('DD/MM/YYYY HH:mm A') : '');
                $('#txtDescription').val(selectedEvent.description);
                $('#intNumOfPeople').val(selectedEvent.numOfPeople);
                $('#hdUserID').val(selectedEvent.userID);
            }
            $('#myModal').modal('hide');
            $('#myModalSave').modal();
        }

    connection.start().then(function () {
        console.log("conectado");
    })


    </script>


    <script src="~/js/Cascade.js"></script>

    <script type="text/javascript">
       
    </script>

}



